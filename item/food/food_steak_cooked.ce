from core.helper import callEvent
from core.template.item import CraftResult, Item, Genus

from siege import Cooldown
from siege.util import seconds

steak_cooked = Item(
    name = "Steak Cooked",
    classification = "Trophy",
    genus = "steak_cooked",
    stack = 99,
    cooldown = Cooldown("Food", seconds(5))
)

steak_cooked.craftable(
    category = "Basics",
    subcategory = "Essentials",
    level = 2,
    experience = 15,
    serviceRequired = "Campfire",
    materials = [
        Genus('steak_raw', quantity=2)
    ],
    results = [
        CraftResult(quantity=2),
        CraftResult(quantity=3, quality=100)
    ]
)


def consume(amount, args, stats=None):
    # Consume food Event (player, food_amount, consumed)
    player = args['player']
    result = callEvent("consume_food", player, amount, consumed=False)

    if not result.consumed:
        # survival mod did not touch it
        int(callEvent("heal_entity", player, player.entity, 15).amount)
        pass
    else:
        # survival mod handled hunger
        # it fed the player
        # we don't need to do anything else
        pass


steak_cooked.usable(consume, 150)
